{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"right-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VotePollForm = _resolveComponent(\"VotePollForm\");\n  const _component_VotePoll = _resolveComponent(\"VotePoll\");\n  const _component_VotePollResult = _resolveComponent(\"VotePollResult\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_VotePollForm, {\n    onPollCreated: $options.handlePollCreated\n  }, null, 8 /* PROPS */, [\"onPollCreated\"]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.polls, (pollData, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"poll-wrapper\",\n      key: index\n    }, [_createVNode(_component_VotePoll, {\n      poll: pollData.poll,\n      onVoted: selectedOption => $options.handleVote(selectedOption, index)\n    }, null, 8 /* PROPS */, [\"poll\", \"onVoted\"]), _createVNode(_component_VotePollResult, {\n      pollResults: pollData.results\n    }, null, 8 /* PROPS */, [\"pollResults\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_VotePollForm","onPollCreated","$options","handlePollCreated","_hoisted_3","_Fragment","_renderList","$data","polls","pollData","index","key","_component_VotePoll","poll","onVoted","selectedOption","handleVote","_component_VotePollResult","pollResults","results"],"sources":["C:\\Users\\Алексей\\Desktop\\Projects\\vue-tmp\\vote_tmp\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"container\">\n      <VotePollForm @poll-created=\"handlePollCreated\" />\n      <div class=\"right-container\">\n        <div class=\"poll-wrapper\" v-for=\"(pollData, index) in polls\" :key=\"index\">\n          <VotePoll :poll=\"pollData.poll\" @voted=\"(selectedOption) => handleVote(selectedOption, index)\" />\n          <VotePollResult :pollResults=\"pollData.results\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport VotePollForm from './components/VotePollForm.vue';\nimport VotePoll from './components/VotePoll.vue';\nimport VotePollResult from './components/VotePollResult.vue';\n\nexport default {\n  data() {\n    return {\n      polls: [] // Хранит массив объектов опросов и результатов\n    };\n  },\n  components: {\n    VotePollForm,\n    VotePoll,\n    VotePollResult\n  },\n  methods: {\n    handlePollCreated(newPoll) {\n      // Добавляем новый опрос и инициализируем результаты\n      const initialResults = newPoll.options.reduce((acc, option) => {\n        acc[option] = 0;\n        return acc;\n      }, {});\n      this.polls.push({ poll: newPoll, results: initialResults });\n    },\n    handleVote(selectedOption, index) {\n      // Увеличиваем количество голосов для выбранного варианта в соответствующем опросе\n      this.polls[index].results[selectedOption]++;\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAiB;;;;;uBAHhCC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAQM,OARNC,UAQM,GAPJC,YAAA,CAAkDC,uBAAA;IAAnCC,aAAY,EAAEC,QAAA,CAAAC;EAAiB,4CAC9CN,mBAAA,CAKM,OALNO,UAKM,I,kBAJJT,mBAAA,CAGMU,SAAA,QARdC,WAAA,CAK8DC,KAAA,CAAAC,KAAK,EALnE,CAK0CC,QAAQ,EAAEC,KAAK;yBAAjDf,mBAAA,CAGM;MAHDD,KAAK,EAAC,cAAc;MAAqCiB,GAAG,EAAED;QACjEX,YAAA,CAAiGa,mBAAA;MAAtFC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;MAAGC,OAAK,EAAGC,cAAc,IAAKb,QAAA,CAAAc,UAAU,CAACD,cAAc,EAAEL,KAAK;kDAC5FX,YAAA,CAAkDkB,yBAAA;MAAjCC,WAAW,EAAET,QAAQ,CAACU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}