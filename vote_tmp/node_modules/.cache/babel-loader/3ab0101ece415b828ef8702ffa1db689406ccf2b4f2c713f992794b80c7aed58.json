{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  data() {\n    return {\n      poll: {\n        question: '',\n        options: ['']\n      },\n      errorMessage: ''\n    };\n  },\n  computed: {\n    canCreatePoll() {\n      const nonEmptyOptions = this.poll.options.map(option => option.trim()).filter(option => option !== '');\n      const uniqueOptions = [...new Set(nonEmptyOptions)];\n      return uniqueOptions.length >= 2 && uniqueOptions.length === nonEmptyOptions.length;\n    }\n  },\n  methods: {\n    addOption() {\n      this.poll.options.push('');\n    },\n    removeOption(index) {\n      this.poll.options.splice(index, 1);\n    },\n    createPoll() {\n      this.errorMessage = ''; // Сбрасываем сообщение об ошибке\n\n      const nonEmptyOptions = this.poll.options.map(option => option.trim()).filter(option => option !== '');\n      const uniqueOptions = [...new Set(nonEmptyOptions)];\n      if (nonEmptyOptions.length < 2) {\n        this.errorMessage = 'Please ensure there are at least 2 options.'; // Проверка на количество опций\n      } else if (uniqueOptions.length < nonEmptyOptions.length) {\n        this.errorMessage = 'Options must be unique.'; // Проверка на уникальность опций\n      } else {\n        this.$emit('poll-created', {\n          ...this.poll\n        });\n        this.poll.question = '';\n        this.poll.options = [''];\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","poll","question","options","errorMessage","computed","canCreatePoll","nonEmptyOptions","map","option","trim","filter","uniqueOptions","Set","length","methods","addOption","push","removeOption","index","splice","createPoll","$emit"],"sources":["C:\\Users\\Алексей\\Desktop\\Projects\\vue-tmp\\vote_tmp\\src\\components\\VotePollForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"poll-form\">\r\n    <h2>Create a new poll</h2>\r\n    <form @submit.prevent=\"createPoll\">\r\n      <label>Question:</label>\r\n      <input type=\"text\" v-model=\"poll.question\" required />\r\n\r\n      <label>Options:</label>\r\n      <div v-for=\"(option, index) in poll.options\" :key=\"index\">\r\n        <input type=\"text\" v-model=\"poll.options[index]\" placeholder=\"Option\" required />\r\n        <button type=\"button\" @click=\"removeOption(index)\">Remove</button>\r\n      </div>\r\n\r\n      <button type=\"button\" @click=\"addOption\">Add Option</button>\r\n      <button type=\"submit\" :disabled=\"!canCreatePoll\">Create Poll</button>\r\n    </form>\r\n    <div v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      poll: {\r\n        question: '',\r\n        options: ['']\r\n      },\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  computed: {\r\n    canCreatePoll() {\r\n      const nonEmptyOptions = this.poll.options\r\n        .map(option => option.trim())\r\n        .filter(option => option !== '');\r\n\r\n      const uniqueOptions = [...new Set(nonEmptyOptions)];\r\n      return uniqueOptions.length >= 2 && uniqueOptions.length === nonEmptyOptions.length;\r\n    }\r\n  },\r\n  methods: {\r\n    addOption() {\r\n      this.poll.options.push('');\r\n    },\r\n    removeOption(index) {\r\n      this.poll.options.splice(index, 1);\r\n    },\r\n    createPoll() {\r\n      this.errorMessage = ''; // Сбрасываем сообщение об ошибке\r\n\r\n      const nonEmptyOptions = this.poll.options\r\n        .map(option => option.trim())\r\n        .filter(option => option !== '');\r\n\r\n      const uniqueOptions = [...new Set(nonEmptyOptions)];\r\n\r\n      if (nonEmptyOptions.length < 2) {\r\n        this.errorMessage = 'Please ensure there are at least 2 options.'; // Проверка на количество опций\r\n      } else if (uniqueOptions.length < nonEmptyOptions.length) {\r\n        this.errorMessage = 'Options must be unique.'; // Проверка на уникальность опций\r\n      } else {\r\n        this.$emit('poll-created', { ...this.poll });\r\n        this.poll.question = '';\r\n        this.poll.options = [''];\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;AAqBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE,CAAC,EAAE;MACd,CAAC;MACDC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,MAAMC,eAAc,GAAI,IAAI,CAACN,IAAI,CAACE,OAAM,CACrCK,GAAG,CAACC,MAAK,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,EAC3BC,MAAM,CAACF,MAAK,IAAKA,MAAK,KAAM,EAAE,CAAC;MAElC,MAAMG,aAAY,GAAI,CAAC,GAAG,IAAIC,GAAG,CAACN,eAAe,CAAC,CAAC;MACnD,OAAOK,aAAa,CAACE,MAAK,IAAK,KAAKF,aAAa,CAACE,MAAK,KAAMP,eAAe,CAACO,MAAM;IACrF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACf,IAAI,CAACE,OAAO,CAACc,IAAI,CAAC,EAAE,CAAC;IAC5B,CAAC;IACDC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAAClB,IAAI,CAACE,OAAO,CAACiB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IACpC,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,CAACjB,YAAW,GAAI,EAAE,EAAE;;MAExB,MAAMG,eAAc,GAAI,IAAI,CAACN,IAAI,CAACE,OAAM,CACrCK,GAAG,CAACC,MAAK,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,EAC3BC,MAAM,CAACF,MAAK,IAAKA,MAAK,KAAM,EAAE,CAAC;MAElC,MAAMG,aAAY,GAAI,CAAC,GAAG,IAAIC,GAAG,CAACN,eAAe,CAAC,CAAC;MAEnD,IAAIA,eAAe,CAACO,MAAK,GAAI,CAAC,EAAE;QAC9B,IAAI,CAACV,YAAW,GAAI,6CAA6C,EAAE;MACrE,OAAO,IAAIQ,aAAa,CAACE,MAAK,GAAIP,eAAe,CAACO,MAAM,EAAE;QACxD,IAAI,CAACV,YAAW,GAAI,yBAAyB,EAAE;MACjD,OAAO;QACL,IAAI,CAACkB,KAAK,CAAC,cAAc,EAAE;UAAE,GAAG,IAAI,CAACrB;QAAK,CAAC,CAAC;QAC5C,IAAI,CAACA,IAAI,CAACC,QAAO,GAAI,EAAE;QACvB,IAAI,CAACD,IAAI,CAACE,OAAM,GAAI,CAAC,EAAE,CAAC;MAC1B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}