{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  class: \"polls-list\"\n};\nconst _hoisted_3 = {\n  class: \"poll-form-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VotePollForm = _resolveComponent(\"VotePollForm\");\n  const _component_VotePoll = _resolveComponent(\"VotePoll\");\n  const _component_VotePollResult = _resolveComponent(\"VotePollResult\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Created Polls\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.polls, (poll, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(poll.question), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_VotePollForm, {\n    onPollCreated: $options.handlePollCreated\n  }, null, 8 /* PROPS */, [\"onPollCreated\"]), $data.poll ? (_openBlock(), _createBlock(_component_VotePoll, {\n    key: 0,\n    poll: $data.poll,\n    onVoted: $options.handleVote\n  }, null, 8 /* PROPS */, [\"poll\", \"onVoted\"])) : _createCommentVNode(\"v-if\", true), $data.pollResults ? (_openBlock(), _createBlock(_component_VotePollResult, {\n    key: 1,\n    pollResults: $data.pollResults\n  }, null, 8 /* PROPS */, [\"pollResults\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","polls","poll","index","key","_toDisplayString","question","_hoisted_3","_createVNode","_component_VotePollForm","onPollCreated","$options","handlePollCreated","_createBlock","_component_VotePoll","onVoted","handleVote","_createCommentVNode","pollResults","_component_VotePollResult"],"sources":["C:\\Users\\Алексей\\Desktop\\Projects\\vue-tmp\\vote_tmp\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" class=\"app-container\">\n    <div class=\"polls-list\">\n      <h2>Created Polls</h2>\n      <ul>\n        <li v-for=\"(poll, index) in polls\" :key=\"index\">\n          {{ poll.question }}\n        </li>\n      </ul>\n    </div>\n    <div class=\"poll-form-container\">\n      <VotePollForm @poll-created=\"handlePollCreated\" />\n      <VotePoll v-if=\"poll\" :poll=\"poll\" @voted=\"handleVote\" />\n      <VotePollResult v-if=\"pollResults\" :pollResults=\"pollResults\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport VotePollForm from './components/VotePollForm.vue';\nimport VotePoll from './components/VotePoll.vue';\nimport VotePollResult from './components/VotePollResult.vue';\n\nexport default {\n  data() {\n    return {\n      polls: [], // Массив для хранения созданных голосований\n      poll: null,\n      pollResults: null\n    };\n  },\n  components: {\n    VotePollForm,\n    VotePoll,\n    VotePollResult\n  },\n  methods: {\n    handlePollCreated(newPoll) {\n      this.polls.push(newPoll); // Добавляем новое голосование в массив\n      this.poll = newPoll;\n      this.pollResults = newPoll.options.reduce((acc, option) => {\n        acc[option] = 0;\n        return acc;\n      }, {});\n    },\n    handleVote(selectedOption) {\n      this.pollResults[selectedOption]++;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  display: flex; /* Используем flexbox для размещения контейнеров рядом друг с другом */\n  justify-content: space-between; /* Распределяем пространство между контейнерами */\n  padding: 20px; /* Добавляем отступы */\n}\n\n.polls-list {\n  width: 30%; /* Ширина контейнера для списка голосований */\n  margin-right: 20px; /* Отступ справа */\n  background-color: #fff; /* Цвет фона */\n  padding: 15px; /* Внутренние отступы */\n  border-radius: 5px; /* Скругляем углы */\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Добавляем тень */\n}\n\n.poll-form-container {\n  width: 65%; /* Ширина контейнера для формы голосования */\n}\n\nh2 {\n  color: #333; /* Цвет заголовка */\n  text-align: center; /* Центрируем текст заголовка */\n}\n\nul {\n  list-style-type: none; /* Убираем маркеры списка */\n  padding: 0; /* Убираем внутренние отступы */\n}\n\nli {\n  margin-bottom: 10px; /* Отступ между элементами списка */\n  padding: 10px; /* Внутренние отступы */\n  background-color: #f9f9f9; /* Цвет фона для элементов списка */\n  border-radius: 3px; /* Скругляем углы */\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;;EACbA,KAAK,EAAC;AAAY;;EAQlBA,KAAK,EAAC;AAAqB;;;;;uBATlCC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJD,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAIK,c,kBAHHF,mBAAA,CAEKI,SAAA,QAPbC,WAAA,CAKoCC,KAAA,CAAAC,KAAK,EALzC,CAKoBC,IAAI,EAAEC,KAAK;yBAAvBT,mBAAA,CAEK;MAF+BU,GAAG,EAAED;IAAK,GAAAE,gBAAA,CACzCH,IAAI,CAACI,QAAQ;sCAItBV,mBAAA,CAIM,OAJNW,UAIM,GAHJC,YAAA,CAAkDC,uBAAA;IAAnCC,aAAY,EAAEC,QAAA,CAAAC;EAAiB,4CAC9BZ,KAAA,CAAAE,IAAI,I,cAApBW,YAAA,CAAyDC,mBAAA;IAZ/DV,GAAA;IAY6BF,IAAI,EAAEF,KAAA,CAAAE,IAAI;IAAGa,OAAK,EAAEJ,QAAA,CAAAK;kDAZjDC,mBAAA,gBAa4BjB,KAAA,CAAAkB,WAAW,I,cAAjCL,YAAA,CAAgEM,yBAAA;IAbtEf,GAAA;IAa0Cc,WAAW,EAAElB,KAAA,CAAAkB;8CAbvDD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}